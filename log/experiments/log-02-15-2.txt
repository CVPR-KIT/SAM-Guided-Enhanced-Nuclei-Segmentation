Directory log/ already exists
PreRun: Creating required directories
Directory Outputs/ already exists
Directory Outputs/Experiments/ already exists
Directory log/ already exists
PreRun: generating experiment config file
Using cuda device
Setting pipilines
loading encoding model
loading UNet3Plus
configuring data loaders
logging parameters
starting training
Epoch 0/50:   0%|          | 0/188 [00:00<?, ?it/s]Epoch 0/50:   0%|          | 0/188 [00:00<?, ?it/s]
torch.Size([1, 134, 768])
torch.Size([1, 131, 768])
torch.Size([1, 130, 768])
torch.Size([1, 122, 768])
torch.Size([1, 127, 768])
torch.Size([1, 133, 768])
torch.Size([1, 136, 768])
torch.Size([1, 134, 768])
torch.Size([1, 126, 768])
torch.Size([1, 128, 768])
torch.Size([1, 124, 768])
torch.Size([1, 127, 768])
torch.Size([1, 124, 768])
torch.Size([1, 133, 768])
torch.Size([1, 129, 768])
torch.Size([1, 132, 768])
Traceback (most recent call last):
  File "/home/bishal/projects/SAM-Guided-U-Net/main.py", line 435, in <module>
    main()
  File "/home/bishal/projects/SAM-Guided-U-Net/main.py", line 253, in main
    train_loss ,train_confusion_matrix, train_mIoU,train_accuracy =  run_epoch_pipeline(model, train_data, criterion, optimizer, epoch, device, 'train',config)
  File "/home/bishal/projects/SAM-Guided-U-Net/main.py", line 74, in run_epoch_pipeline
    for idx, (image, label, enc) in enumerate(tqdm(data_loader, desc=f"Epoch {epoch}/{config['epochs']}")):
  File "/home/bishal/projects/SAM-Guided-U-Net/samGEnv/lib/python3.10/site-packages/tqdm/std.py", line 1181, in __iter__
    for obj in iterable:
  File "/home/bishal/projects/SAM-Guided-U-Net/samGEnv/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 631, in __next__
    data = self._next_data()
  File "/home/bishal/projects/SAM-Guided-U-Net/samGEnv/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 675, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/bishal/projects/SAM-Guided-U-Net/samGEnv/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 54, in fetch
    return self.collate_fn(data)
  File "/home/bishal/projects/SAM-Guided-U-Net/samGEnv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py", line 277, in default_collate
    return collate(batch, collate_fn_map=default_collate_fn_map)
  File "/home/bishal/projects/SAM-Guided-U-Net/samGEnv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py", line 144, in collate
    return [collate(samples, collate_fn_map=collate_fn_map) for samples in transposed]  # Backwards compatibility.
  File "/home/bishal/projects/SAM-Guided-U-Net/samGEnv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py", line 144, in <listcomp>
    return [collate(samples, collate_fn_map=collate_fn_map) for samples in transposed]  # Backwards compatibility.
  File "/home/bishal/projects/SAM-Guided-U-Net/samGEnv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py", line 121, in collate
    return collate_fn_map[elem_type](batch, collate_fn_map=collate_fn_map)
  File "/home/bishal/projects/SAM-Guided-U-Net/samGEnv/lib/python3.10/site-packages/torch/utils/data/_utils/collate.py", line 174, in collate_tensor_fn
    return torch.stack(batch, 0, out=out)
RuntimeError: stack expects each tensor to be equal size, but got [1, 134, 768] at entry 0 and [1, 131, 768] at entry 1

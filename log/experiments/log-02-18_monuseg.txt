Directory log/ already exists
PreRun: Creating required directories
Directory Outputs/ already exists
Directory Outputs/Experiments/ already exists
Directory log/ already exists
PreRun: generating experiment config file
Using cuda device
Setting pipilines
loading encoding model
loading UNet3Plus
configuring data loaders
logging parameters
starting training
Epoch 0/50:   0%|          | 0/2673 [00:00<?, ?it/s]Epoch 0/50:   0%|          | 0/2673 [00:00<?, ?it/s]
31092
(1536,)
Traceback (most recent call last):
  File "/home/bishal/projects/SAM-Guided-U-Net/main.py", line 435, in <module>
    main()
  File "/home/bishal/projects/SAM-Guided-U-Net/main.py", line 253, in main
    train_loss ,train_confusion_matrix, train_mIoU,train_accuracy =  run_epoch_pipeline(model, train_data, criterion, optimizer, epoch, device, 'train',config)
  File "/home/bishal/projects/SAM-Guided-U-Net/main.py", line 74, in run_epoch_pipeline
    for idx, (image, label, enc) in enumerate(tqdm(data_loader, desc=f"Epoch {epoch}/{config['epochs']}")):
  File "/home/bishal/projects/SAM-Guided-U-Net/samGEnv/lib/python3.10/site-packages/tqdm/std.py", line 1181, in __iter__
    for obj in iterable:
  File "/home/bishal/projects/SAM-Guided-U-Net/samGEnv/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 631, in __next__
    data = self._next_data()
  File "/home/bishal/projects/SAM-Guided-U-Net/samGEnv/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 675, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/bishal/projects/SAM-Guided-U-Net/samGEnv/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/bishal/projects/SAM-Guided-U-Net/samGEnv/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 51, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/bishal/projects/SAM-Guided-U-Net/dataset.py", line 71, in __getitem__
    return torch.Tensor(image),torch.LongTensor(label), samencoding.squeeze(0)
ValueError: cannot select an axis to squeeze out which has size not equal to one
